// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/martinusiron/PayFlow/internal/adminsummary/domain"
	mock "github.com/stretchr/testify/mock"
)

// AdminSummaryRepository is an autogenerated mock type for the AdminSummaryRepository type
type AdminSummaryRepository struct {
	mock.Mock
}

// GetSummaryByPayrollID provides a mock function with given fields: ctx, payrollID
func (_m *AdminSummaryRepository) GetSummaryByPayrollID(ctx context.Context, payrollID int) (*domain.FullSummary, error) {
	ret := _m.Called(ctx, payrollID)

	if len(ret) == 0 {
		panic("no return value specified for GetSummaryByPayrollID")
	}

	var r0 *domain.FullSummary
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int) (*domain.FullSummary, error)); ok {
		return rf(ctx, payrollID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int) *domain.FullSummary); ok {
		r0 = rf(ctx, payrollID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.FullSummary)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, payrollID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAdminSummaryRepository creates a new instance of AdminSummaryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAdminSummaryRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *AdminSummaryRepository {
	mock := &AdminSummaryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/martinusiron/PayFlow/internal/payslip/domain"
	mock "github.com/stretchr/testify/mock"
)

// PayslipRepository is an autogenerated mock type for the PayslipRepository type
type PayslipRepository struct {
	mock.Mock
}

// GetLatestPayslip provides a mock function with given fields: ctx, userID
func (_m *PayslipRepository) GetLatestPayslip(ctx context.Context, userID int) (*domain.Payslip, error) {
	ret := _m.Called(ctx, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetLatestPayslip")
	}

	var r0 *domain.Payslip
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int) (*domain.Payslip, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int) *domain.Payslip); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Payslip)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPayslipRepository creates a new instance of PayslipRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPayslipRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *PayslipRepository {
	mock := &PayslipRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
